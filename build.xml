<project name="XlsReader library" default="build" basedir="./">
    
	<description>
		This XlsReader build file is based upon
		the Processing libraries build file.
	</description>
	
	<target name="settings">
	
<!-- == These two need to be set for building. == -->

	<!-- ... the path to Processings libraries (core.jar, etc) -->
	<!-- property name="libraryClasspath" 
				  location="/Applications/Processing.app/Contents/Resources/Java/"/ -->
	<property name="libraryClasspath" 
			  location="/Users/fjenett/Repos/processing/build/macosx/work/Processing.app/Contents/Resources/Java/" />
	
	<!-- ... the user libraries folder inside your Processing sketchbook -->
	<property name="processing" 
			  location="/Users/fjenett/Documents/Processing/libraries"/>

<!-- == No changes or adjustments required below == -->

	<property name="author" 		value="Florian Jenett"/>
	<property name="copyright" 		value="(c) 2007 - 2013"/>
	<property name="libraryName"  	value="XlsReader"/>
	<property name="versionNumber"  value="0.1.2"/>
	<property name="yourLink"  		value="http://bezier.de/" />
	<property name="keywords" 		value="Excel, reader, xls, data"/>
	<property name="javaVersion" 	value="1.5"/>
	
	<path id="library-classes-add">
		<fileset dir="lib/poi-3.7/">
			<include name="poi-3*.jar"/>
			<include name="poi-scratchpad-*.jar"/>
		</fileset>
	</path>
	<path id="library-classpath">
		<fileset dir="${libraryClasspath}" >
			<include name="core/library/core.jar"/>
		</fileset>
		<path refid="library-classes-add" />
	</path>
	
	<property name="jarFile" value="${libraryName}.jar"/>
	<property name="src" 	 location="src"/>
	<property name="bin" 	 location="bin"/>
	<property name="javadoc" location="documentation"/>
	<property name="dist" 	 value="${libraryName}"/>
	<property name="build" 	 location="build"/>
	
<echo>Properties initialized.
src path			 ${src}
bin path 			 ${bin}
libraryClasspath	 ${libraryClasspath}
processing Libraries ${processing}
java version		 ${javaVersion}
</echo>
	</target>
	
	<target name="init" depends="settings">
	
	<buildnumber file="lib/build.number"/>
	<tstamp> <!-- Create the time stamp -->
		<format property="date" pattern="MM/dd/yyyy" offset="0" unit="hour"/>
	</tstamp>

	<echo>Start to build the library ... this is vers. ${versionNumber}, build #${build.number} on ${date}</echo>

<!--
	add ant-contrib package, needed for <foreach>
-->
<taskdef resource="net/sf/antcontrib/antcontrib.properties">
  <classpath>
    <pathelement location="lib/ant-contrib-1.0b3.jar"/>
  </classpath>
</taskdef>

	<mkdir dir="${dist}"/>
  </target>
  
  <!--echo>${toString:library-classpath}</echo-->
  
	<!-- compile the library -->
  <target name="compile" depends="init" description="compile the source" >  	
		<mkdir dir="${bin}"/>
		<javac srcdir="${src}" destdir="${bin}" source="${javaVersion}" target="${javaVersion}">
			<classpath>
				<path refid="library-classpath"/>
			</classpath>
		</javac>
  </target>

	<!-- build the distribution of the library -->
  	<target name="build" depends="compile" description="generate the distribution" >
	  	<!-- delete the previous content of the ${dist} folder -->
	  	<delete dir="${dist}" />
	  	
	  	<!-- build the structure for ${dist} -->
	  	<mkdir dir="${dist}" />
	  	<mkdir dir="${dist}/library" />
	  	<mkdir dir="${dist}/examples" />
	  	<mkdir dir="${dist}/reference" />
		
	  	<jar jarfile="${dist}/library/${jarFile}" basedir="${bin}"/>

		<copy todir="${dist}/library">
	  		<path refid="library-classes-add" />
	  	</copy>
		
	  	<copy todir="${dist}/examples">
	  		<fileset dir="examples"/>
	  	</copy>
	  	
		<!-- create the java documentation of the library -->
	 	<mkdir dir="${javadoc}" />
	 	<javadoc bottom="processing library ${libraryName} by ${author}. ${copyright}"
				 destdir="${javadoc}" 
				 verbose="false" 
				 stylesheetfile="resources/stylesheet.css" 
				 doctitle="Javadocs: ${libraryName}" 
				 public="true" version="false" 
				 windowtitle="Javadocs: ${libraryName}">
	 		<fileset dir="${src}" defaultexcludes="yes">
				<include name="**/*"/>
			</fileset>
			<classpath>
				<path refid="library-classpath" />
			</classpath>
	 	</javadoc>

		<copy todir="${dist}/reference">
			<fileset dir="${javadoc}" />
		</copy>
	  	
  	  	<!-- copy the jar file to processing's libraries -->
  	  	<delete dir="${processing}/${libraryName}" />
  	  	<mkdir dir="${processing}/${libraryName}" />
  		<copy todir="${processing}/${libraryName}">
  			<fileset dir="${dist}"/>
  		</copy> 

	  	<!-- finish library's distribution -->
	  	
	  	<copy todir="${processing}/${libraryName}/reference">
			<fileset dir="${javadoc}" />
		</copy>

		<!-- add more -->

		<copy todir="${dist}/src">
			<fileset dir="${src}" />
		</copy>

		<copy todir="${dist}">
			<fileset file="resources/library.properties" />
			<fileset file="readme.md" />
		</copy>

		<replaceregexp file="${dist}/library.properties" flags="g"
  					   match="@@LIBRARY_NAME@@" replace="${libraryName}" />
		<replaceregexp file="${dist}/library.properties" flags="g"
  					   match="@@VERSION@@" replace="${build.number}" />
		<replaceregexp file="${dist}/library.properties" flags="g"
  					   match="@@PRETTY_VERSION@@" replace="${versionNumber}" />

		<!-- zip the distribution of the library -->

	  	<zip destfile="releases/${libraryName}-${versionNumber}.zip">
	  		<zipfileset dir="">
				<include name="${dist}/**/**" />
			</zipfileset>
	  	</zip>

		<!-- library contribution system -->

		<mkdir dir="release" />

		<copy file="releases/${libraryName}-${versionNumber}.zip" 
			  tofile="release/${libraryName}.zip" />

		<copy file="${dist}/library.properties" 
			  tofile="release/${libraryName}.txt" />
	  	
	  	<!-- done, finished. -->

	  	<delete dir="${dist}" />
	</target>

	<target name="web">

		<!-- organize the ${dist} folder -->
	  	<mkdir dir="web" />

	  	<copy todir="web/documentation">
	  		<fileset dir="${dist}/reference" />
	  	</copy>
	  	
	  	<copy todir="web/examples">
	  		<fileset dir="${dist}/examples" />
	  	</copy>
	  	
	  	<!--delete dir="${dist}/library" /-->
	  	
		<!-- <copy todir="web">
	  		<fileset dir="web" />
	  	</copy> -->
	  	
	  	<!--
	  	format the index.html file. 
	  	regular expressions are used to parse the web index.html file. 
	  	key words starting and ending with ## are replaced by values 
	  	defined earlier in the beginning of this build file.
	  	-->
	  	
	  	<replaceregexp file="web/index.html"
	  	                         match="##yourLibrary##"
	  	                         replace="${libraryName}"
	  	                         flags="g" />
	  	
	  	<replaceregexp file="web/index.html"
								match="##author##"
								replace="${author}"
								flags="g" />
	  	
	  	<replaceregexp file="web/index.html"
								match="##versionNumber##"
								replace="${versionNumber}"
								flags="g" />
	  	
		<replaceregexp file="web/index.html"
								match="##yourLink##"
	  							replace="${yourLink}"
								flags="g" />
	  	
	  	<replaceregexp file="web/index.html"
	  							match="##date##"
	  	  						replace="${date}"
	  	  						flags="g" />
	  	
	  	<replaceregexp file="web/index.html"
	  							match="##keywords##"
	  	  						replace="${keywords}"
	  	  						flags="g" />
								
								
		<!-- <antcall target="processExamples" /> -->

	  	<mkdir dir="web/download" />
	  	<copy file="releases/${libraryName}-${versionNumber}.zip" todir="web/download" />

	</target>
 
 
	<!-- XCode clean target task -->
	<target name="clean" depends="settings">
		<echo>Starting clean ..</echo>
		<delete dir="${dist}" />
		<delete dir="${bin}" />
		<delete dir="${javadoc}" />
		<delete dir="${build}" />
		<delete dir="library" />
		<echo>Done clean ..</echo>
	</target> 
	
	
	<!-- parsing the examples folder -->
	<target name="processExamples">
		<dirset id="examples.contents" dir="examples" excludes="*/*"/>
		<property name="examples.list" refid="examples.contents"/>
		<foreach list="${examples.list}" target="addExamples" param="exampleDir" delimiter=";">
		</foreach>
		<!--echo>${examples.list}</echo-->
		<!--foreach param="exampleDir" target="addExamples">
			<path>
				<dirset id="examples.contents" dir="examples" excludes="*/*"/>
			</path>
		</foreach-->
		<replaceregexp 
			file="web/index.html"
  			match="(##examples##)"
  	  		replace=""
  	  		flags="g" />
	</target>
		
	<target name="addExamples" depends="settings">
		<property name="exampleZipped" value="${exampleDir}.zip"/>
		<zip destfile="web/examples/${exampleZipped}"
  	       basedir="web/examples/${exampleDir}/"
  	       excludes="**/_DS.Store" />
		<replaceregexp 
			file="web/index.html"
  			match="(##examples##)"
  	  		replace="&lt;li&gt;&lt;a href=&quot;examples/${exampleZipped}&quot;&gt;${exampleDir}&lt;/a&gt;&lt;/li&gt; \1"
  	  		flags="g" />
	</target>
</project>

